<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0"	xmlns="http://www.w3.org/1999/xhtml"	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"	xmlns:lio="http://slothsoft.net"	xmlns:exsl="http://exslt.org/common"	xmlns:date="http://exslt.org/dates-and-times"	xmlns:func="http://exslt.org/functions"	xmlns:str="http://exslt.org/strings"	xmlns:php="http://php.net/xsl"	extension-element-prefixes="func">		<xsl:variable name="signature" select="//@signature"/>		<xsl:template match="error" mode="cms">		<details open="open" class="errorMessage">			<summary><xsl:value-of select="@message"/></summary>			<pre>				<xsl:value-of select="."/>			</pre>		</details>	</xsl:template> 	<xsl:template match="/data">		<html>			<head><title>Slothsoft - Arbeitszeitnachweis</title>			<style type="text/css"><![CDATA[* {	font-family: "Myriad Pro", Myriad, "Liberation Sans", "Nimbus Sans L", "Helvetica Neue", Helvetica, Arial, sans-serif;}html, body {	margin: 0;	padding: 0;}article {	width: 16cm;	margin: auto;	padding: 1.5cm 0;	page-break-after: always;	position: relative;}article::before {	content: "";	position: absolute;	top: 0.5cm; 	right: -1cm;	width: 100%; 	height: 100%;  	opacity: .4; 	z-index: -1;	background-image: url(https://www.ai5.uni-bayreuth.de//de/i/logo-university-of-bayreuth.png);	background-repeat: no-repeat;	background-position: right 0 top 0;}header {	font-size: 20pt;	font-weight: bold;}h1 {	font-size: 16pt;	text-align: center;	padding: 0.5em;}p {	font-size: 11pt;	text-align: justify;	padding: 0.5em;}.report {	height: 10cm;}table {	border-spacing: 0;	border-collapse: collapse;	width: 100%;}thead {	background-color: #eee;}tfoot td {	text-decoration-line: underline;	text-decoration-style: double;}th, td {	border: 1px solid black;	font-size: 11pt;	font-weight: normal;	width: 25%;}th {	padding: 1em;}td {	padding: 0.5em;}.input {	background-color: #eee;	padding: 0.25em;}footer {	font-size: 11pt;	margin-top: 2cm;}.sig {	padding: 0.5em;}.sig.date {	text-align: left;	display: inline-block;	width: 4cm;	border-top: 1px solid black;}.sig.name {	text-align: center;	display: inline-block;	width: 6cm;	border-top: 1px solid black;	margin-left: 2cm;}.sig .handwriting {	position: absolute;	width: 4cm;	margin-top: -2em;}.sig .handwriting img {	height: 3em;	margin: -2em auto 0 auto;	display: block;}.toc {	background-color: rgba(0, 0, 0, 0.1);	border: 1px solid rgba(0, 0, 0, 0.2);	margin: 1em auto;	padding: 1em 2em;	width: max-content;}@media print {	.noprint {		display: none;	}}			]]></style>				<xsl:copy-of select="*"/>			</head>						<body>				<xsl:apply-templates select="//error" mode="cms"/>				<xsl:for-each select="*[@data-cms-name='arbeit.report']/*">					<xsl:variable name="report" select="."/>					<ul class="noprint toc">						<xsl:for-each select="//year">							<xsl:variable name="year" select="."/>							<xsl:for-each select="//month">								<xsl:variable name="month" select="."/>								<xsl:call-template name="toc">									<xsl:with-param name="report" select="$report"/>									<xsl:with-param name="weeks" select="//week[@year = $year][@month = $month]"/>									<xsl:with-param name="month" select="$month"/>									<xsl:with-param name="year" select="$year"/>								</xsl:call-template>							</xsl:for-each>						</xsl:for-each>					</ul>					<xsl:for-each select="//year">						<xsl:variable name="year" select="."/>						<xsl:for-each select="//month">							<xsl:variable name="month" select="."/>							<xsl:call-template name="report">								<xsl:with-param name="report" select="$report"/>								<xsl:with-param name="weeks" select="//week[@year = $year][@month = $month]"/>								<xsl:with-param name="month" select="$month"/>								<xsl:with-param name="year" select="$year"/>							</xsl:call-template>						</xsl:for-each>					</xsl:for-each>				</xsl:for-each>			</body>		</html>	</xsl:template>		<xsl:template name="toc">		<xsl:param name="report"/>		<xsl:param name="weeks"/>		<xsl:param name="month"/>		<xsl:param name="year"/>				<xsl:variable name="duration" select="sum($report/line[string(@Startdate) = $weeks/day]/@Duration)"/>				<xsl:if test="$duration > 0">			<li>				<a href="#month-{$year}-{$month}">Monat <xsl:value-of select="$year"/>/<xsl:value-of select="$month"/>: <b><xsl:value-of select="lio:format-duration($duration)"/></b> / <xsl:value-of select="$report/@targetHours"/> Stunden</a>			</li>		</xsl:if>	</xsl:template>		<xsl:template name="report">		<xsl:param name="report"/>		<xsl:param name="weeks"/>		<xsl:param name="month"/>		<xsl:param name="year"/>				<xsl:variable name="duration" select="sum($report/line[@Startdate = $weeks/day]/@Duration)"/>		<!--		<month id="{$month}">			<xsl:copy-of select="$weeks"/>		</month>		-->		<xsl:if test="$duration > 0">			<h1 id="month-{$year}-{$month}" class="noprint">Monat <xsl:value-of select="$year"/>/<xsl:value-of select="$month"/>: <span class="input"><xsl:value-of select="lio:format-duration($duration)"/></span> / <xsl:value-of select="$report/@targetHours"/> Stunden</h1>								<xsl:for-each select="$weeks">				<xsl:call-template name="page">					<xsl:with-param name="lines" select="$report/line[@Startdate = current()/day]"/>					<xsl:with-param name="week" select="."/>				</xsl:call-template>			</xsl:for-each>		</xsl:if>	</xsl:template>		<xsl:template name="page">		<xsl:param name="lines"/>		<xsl:param name="week"/>				<xsl:if test="$lines">			<article class="page">				<header>Universität Bayreuth</header>				<h1>Dokumentation der täglichen Arbeitszeit nach § 17 Mindestlohngesetz für geringfügig Beschäftigte</h1>				<p>Das Mindestlohngesetz verlangt eine Dokumentation von Beginn, Ende und Dauer der täglichen Arbeitszeit von geringfügig Beschäftigten. Die Zeiten sind bis spätestens zum Ablauf des siebten auf den Tag der Arbeitsleistung folgenden Kalendertages aufzuzeichnen. Sie sind mindestens zwei Jahre beginnend ab dem für die Aufzeichnung maßgeblichen Zeitpunkt aufzubewahren.</p>				<p>Geringfügig Beschäftigte/r: <span class="input"><xsl:value-of select="$lines/@User"/></span></p>				<p>Kalenderwoche vom: <span class="input"><xsl:value-of select="$week/@start"/></span>. bis <span class="input"><xsl:value-of select="$week/@end"/></span></p>				<div class="report">					<table>						<thead>							<tr>								<th/>								<th colspan="2">Arbeitszeit</th>								<th/>							</tr>							<tr>								<th>Tag</th>								<th>von</th>								<th>bis</th>								<th>Stunden</th>							</tr>						</thead>						<tbody>							<xsl:for-each select="$lines">								<xsl:sort select="@Start"/>								<xsl:variable name="pos" select="position()"/>								<tr>									<td><span class="input"><xsl:value-of select="@Startdate"/></span></td>									<td><span class="input"><xsl:value-of select="@Starttime"/></span></td>									<td><span class="input"><xsl:value-of select="@Endtime"/></span></td>									<td><span class="input"><xsl:value-of select="lio:format-duration(@Duration)"/></span></td>								</tr>							</xsl:for-each>						</tbody>						<tfoot>							<tr>								<td colspan="3"/>								<td><span class="input"><xsl:value-of select="lio:format-duration(sum($lines/@Duration))"/></span></td>							</tr>						</tfoot>					</table>				</div>				<footer>					<span class="sig date">						<xsl:if test="$signature">							<span class="handwriting"><xsl:value-of select="//@date"/></span>						</xsl:if>						<xsl:text>Datum</xsl:text>					</span>					<span class="sig name">						<xsl:if test="$signature">							<span class="handwriting"><img src="/getResource.php/dev/misc/Signature.{$signature}.png" alt="{$signature}"/></span>						</xsl:if>						<xsl:text>Unterschrift Beschäftigte/r</xsl:text>					</span>				</footer>				<footer>					<span class="sig date">Datum</span>					<span class="sig name">Unterschrift Dienststelle</span>				</footer>			</article>		</xsl:if>	</xsl:template>		<func:function name="lio:parse-duration">		<xsl:param name="string"/>		<xsl:variable name="tokens" select="str:tokenize($string, ':')"/>		<func:result select="$tokens[1] * 60 * 60 + $tokens[2] * 60"/>	</func:function>		<func:function name="lio:format-duration">		<xsl:param name="number"/>		<xsl:variable name="hours" select="floor($number div 3600)"/>		<xsl:variable name="minutes" select="($number - $hours * 3600) div 60"/>		<func:result select="concat(format-number($hours, '00'), ':', format-number($minutes, '00'))"/>	</func:function></xsl:stylesheet>