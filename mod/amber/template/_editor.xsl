<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet version="1.0"	xmlns="http://www.w3.org/1999/xhtml"	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"> 	<xsl:output method="xml" indent="no" encoding="UTF-8" media-type="application/xhtml+xml" version="1.0"/>	<xsl:variable name="text" select="/data/text"/>	<xsl:template match="/data">		<html>			<head>				<title>Faulos Ambermoon Spielstand Editor</title>						<link rel="shortcut icon" type="image/png" href="/favicon_llo.png" />				<script type="application/javascript">					addEventListener(						"load",						function(eve) {							Amber.Data = <xsl:value-of select="*[@data-cms-name='editor']/json"/>;						},						false					);				</script>			</head>			<body>				<!--				<form action="upload.php" method="post" enctype="multipart/form-data">					<div class="Upload">						<table>							<tr>								<th colspan="2">Spielstand hochladen</th>							</tr>							<tr>								<th>Party_char.amb</th>								<td><input name="FILE_CHARS" type="file" class="yellow" /></td>							</tr>							<tr>								<th>Party_data.sav</th>								<td><input name="FILE_PARTY" type="file" class="yellow" /></td>							</tr>							<tr>								<th colspan="2" class="Submit"><input type="submit" value="Hochladen" /></th>							</tr>						</table>					</div>				</form>				-->								<article class="Instructions">					<h1>Erklärung</h1>					<p>						Dies ist ein Savegame-Editor für das Thalion Spiel Ambermoon.						Er ermöglicht das Herunterladen eines Spielstands bei Spielbeginn mit veränderten Charaktereigenschaften.						Beispielsweise könnte Großvaters Enkel statt eines menschlichen Abenteurers ein elfischer Magier sein...					</p>					<h1>Installation</h1>					<ol>						<li>Hier die gewünschten Charakteränderungen vornehmen.</li>						<li>Auf Konsistenz achten: Beispielsweise sollten "Klasse" und "Schule" immer zusammengehören. Alle Klassen unter "Magier" habe ich nicht getestet, das Wort in Klammern beschreibt das Symbol der Klasse im Kampfbildschirm.</li>						<li>Das Inventar und "Gewicht" am Besten so lassen wie es ist - wenn eins von beiden unbedacht verändert wird könnte der Charakter auf einmal negative Kilos mit sich rumschleppen! orz</li>						<li>Wenn "Partymembers" verändert werden, die entsprechenden "Partybits" anklicken. Wenn beispielsweise Egil über die Dropdown-Box in die Party aufgenommen wird, muss der Schalter "Egil nicht in Spannenberg" aktiviert werden - sonst hat man ihn in der Party und er rennt gleichzeitig im Trainer-Haus rum :D</li>						<li>Wenn die neue Party den Ansprüchen genügt, nochmal überprüfen dass "PartyCount" die korrekte Anzahl der aktiven Party-Mitglieder wiedergibt...</li>						<li>"Party_char.amb" und "Party_data.sav" runterladen.</li>						<li>Diese 2 Dateien irgendwie auf den Amiga befördern :3</li>						<li>Ambermoon starten.</li>						<li>Neues Spiel beginnen.</li>						<li>Sofort auf einen beliebigen Slot speichern. Die Nummer des Slots merken.</li>						<li>Ambermoon beenden.</li>						<li>In den Ambermoon-Ordnen die Spielstände finden. Es sind 11 Ordner von "0" bis "10" durchnummiert. Spielstand "0" ist der, der von Ambermoon geladen wird wenn ein neues Spiel begonnen wird.</li>						<li>In dem Ordner des eben gespeicherten Spiels die Dateien "Party_char.amb" und "Party_data.sav" kopieren.</li>						<li>Ambermoon starten und den Spielstand laden. Alle Charakterwerte sollten jetzt den vorgenommenen Änderungen entsprechen.</li>						<li>Für Fragen, Anregungen oder Beschwerden stehe ich unter <samp>Daniel_Schulz1@web.de</samp> zur Verfügung.</li>					</ol>				</article>				<xsl:apply-templates select="*[@data-cms-name='editor']/savegame"/>			</body>		</html>	</xsl:template>	<xsl:template match="savegame">		<form action="" method="post">			<ul class="inline Submit">				<!--				<li>					<input value="Speichern" name="SaveAll" type="submit" />				</li>				-->				<li>					<input value="Party_data.sav" name="DownloadParty" type="submit" />				</li>				<li>					<input value="Party_char.amb" name="DownloadChars" type="submit" />				</li>			</ul>			<label>				<span>Aktiver Charakter: </span>				<select class="yellow" onchange="Amber.changeChar.call(this);">					<xsl:variable name="chars" select="//select[@name='PartyMembers']"/>					<xsl:for-each select="$chars[1]/option">						<option value="{@key}">							<xsl:value-of select="@value"/>						</option>					</xsl:for-each>				</select>			</label>			<ul class="Team">				<li class="PartySave">					<xsl:apply-templates select="data[@id='Party']/*" mode="form"/>				</li>				<xsl:for-each select="data[@id='Char']/list[@name='Char']/*">					<li class="Char" style="display: none">						<xsl:apply-templates select="group" mode="form"/>					</li>				</xsl:for-each>			</ul>		</form>				</xsl:template>		<xsl:template match="*[@template]" mode="form">		<xsl:variable name="parent" select="."/>		<xsl:choose>			<xsl:when test="@template='Spells'">				<xsl:for-each select="*">					<table>						<xsl:if test="string-length(../@class)">							<xsl:attribute name="class"><xsl:value-of select="../@class"/></xsl:attribute>						</xsl:if>						<thead>							<tr><th colspan="2" class="green"><xsl:value-of select="@name"/></th></tr>							<tr><th/><th/></tr>						</thead>						<xsl:apply-templates select="." mode="form"/>					</table>				</xsl:for-each>			</xsl:when>			<xsl:when test="@template='stat'">				<xsl:apply-templates select="*[1]" mode="form"/> + <xsl:apply-templates select="*[3]" mode="form"/>				<xsl:text>/</xsl:text>				<xsl:apply-templates select="*[2]" mode="form"/> + <xsl:apply-templates select="*[4]" mode="form"/>			</xsl:when>			<xsl:when test="@template='item'">				<xsl:apply-templates select="*[1]" mode="form"/>				<xsl:apply-templates select="*[2]" mode="form"/>				<xsl:apply-templates select="*[3]" mode="form"/>				<xsl:apply-templates select="*[4]" mode="form"/>			</xsl:when>			<xsl:when test="@template='row'">				<tbody>					<xsl:for-each select="*">						<tr>							<th>								<xsl:variable name="pos" select="position()"/>								<xsl:choose>									<xsl:when test="$text/*[name()=$parent/@name][$pos]">										<xsl:value-of select="$text/*[name()=$parent/@name][$pos]/@name"/>									</xsl:when>									<xsl:otherwise>										<xsl:value-of select="@name"/>									</xsl:otherwise>								</xsl:choose></th>							<td><xsl:apply-templates select="." mode="form"/></td>						</tr>					</xsl:for-each>				</tbody>			</xsl:when>			<xsl:when test="@template='col'">				<table>					<xsl:if test="string-length(@class)">						<xsl:attribute name="class"><xsl:value-of select="@class"/></xsl:attribute>					</xsl:if>					<xsl:for-each select="*">											<tbody>							<tr>								<th colspan="2" class="green"><xsl:value-of select="@name"/></th>							</tr>						</tbody>						<xsl:apply-templates select="." mode="form"/>										</xsl:for-each>				</table>			</xsl:when>		</xsl:choose>	</xsl:template>		<xsl:template match="group" mode="form">						<table>					<xsl:for-each select="*">						<tr>							<th><xsl:value-of select="@name"/></th>							<td><xsl:apply-templates select="." mode="form"/></td>						</tr>					</xsl:for-each>				</table>			</xsl:template>		<xsl:template match="mask" mode="form">		<tbody>			<xsl:for-each select="*">				<tr>					<td colspan="2"><xsl:apply-templates select="." mode="form"/>					<xsl:value-of select="@name"/></td>				</tr>			</xsl:for-each>		</tbody>	</xsl:template>		<xsl:template match="single" mode="form">		<input type="text" name="{@id}" value="{@value}">			<xsl:if test="@name">				<xsl:attribute name="class"><xsl:value-of select="@name"/></xsl:attribute>			</xsl:if>		</input>	</xsl:template>	<xsl:template match="bit" mode="form">		<input type="checkbox" name="{@id}_checkbox" value="{@value}">			<xsl:if test="@value &gt; 0">				<xsl:attribute name="checked">checked</xsl:attribute>			</xsl:if>			<xsl:if test="@name">				<xsl:attribute name="class"><xsl:value-of select="@name"/></xsl:attribute>			</xsl:if>		</input>		<input type="hidden" name="{@id}" value="_checkbox"/>	</xsl:template>	<xsl:template match="list" mode="form">		<div class="{@name}">			<xsl:choose>				<xsl:when test="@name='LP' or @name='SP'">					<xsl:apply-templates select="*[1]" mode="form"/> / <xsl:apply-templates select="*[2]" mode="form"/> + <xsl:apply-templates select="*[3]" mode="form"/>				</xsl:when>				<xsl:when test="@name='Alter'">					<xsl:apply-templates select="*[1]" mode="form"/> / <xsl:apply-templates select="*[2]" mode="form"/>				</xsl:when>				<xsl:otherwise>					<xsl:apply-templates select="*" mode="form"/>				</xsl:otherwise>			</xsl:choose>		</div>	</xsl:template>	<xsl:template match="select" mode="form">		<select name="{@id}">			<xsl:if test="@name">				<xsl:attribute name="class"><xsl:value-of select="@name"/></xsl:attribute>			</xsl:if>			<xsl:for-each select="option">				<option value="{@key}">					<xsl:if test="../@value = @key">						<xsl:attribute name="selected">selected</xsl:attribute>					</xsl:if>					<xsl:if test="../@name = 'Portrait'">						<xsl:attribute name="style">background-image:url('/mod/amber/res/portraits/<xsl:value-of select="@value"/>.png');</xsl:attribute>					</xsl:if>					<xsl:value-of select="@value"/>				</option>			</xsl:for-each>		</select>	</xsl:template>	</xsl:stylesheet>